João Fulano,123.456.789-00,21 de Maio de 1993,(21) 3079-9987,Rua do Ouvidor,50,20040-030,Rio de Janeiro
Maria Fulana, 98765432100,11 de Abril de 1995,(11) 933339871,Rua Vergueiro,3185,04101-300,São Paulo
denise teste, 987.654.321.00,28 de Dezembro de 1991,(31)45562712,SCS Qd. 8 Bl. B-50,11,70333-900,Rio Grande

Encontrando CPF:
	\d\d\d\.\d\d\d\.\d\d\d-\d\d 		(maneira menos esperta)
	\d{3}\.\d{3}\.\d{3}-\d{2}			(maneira mais correta)
	\d{3}\.?\d{3}\.?\d{3}-?\d{2}		(opcionalidade do "." e "-" na string)

Data de nascimento:
	[1-3]?\d\s+de\s+[A-Z][a-zç]{3,8}\s+de\s+[1-2]\d{3}
	([1-3]?\d)\s+(?:de\s+)?([A-Z][a-zç]{3,8})\s+(?:de\s+)?([1-2]\d{3}) [com grupos]


Outros exercícios:
	[0-2]\dh[0-5]\dmin[0-5]\ds. --> para pegar a hora
	[A-Z]{3}-\d{4} --> placa de carro
	7\.[2-9]\s+-\s+[A-Z][a-zãç]+ --> notas dos alunos entre 7.2 e 7.9
	\w{0,}ROT\w+
	^([\w-]+\.?)@([\w-]+\.)+([A-Za-z]{2,4})+$ --> validação de email
	([\w\s]+)\|([1-3]?\d)(?:/)([0-1]?\d)(?:/)([1-2]\d{3})\|([\w\s]+)\|(\d{1,4})\|(\d{5}-\d{3})\|([\w\s]+) ---> correios
	

=============================================================================================================

"\w" --> representa qualquer dígito, seja letra ou número
"\d" --> representa qualquer dígito [0-9]
"[\.abcd]" --> representa uma classe de caracteres (Ex: "\d" == "[0123456789] ou [0-9]")
"\s" --> representa um espaço em branco

Meta-caracteres
"."  --> representa qualquer caractere (espaço, vírgula, ponto, letra, dígito, tanto faz)!!!
	Para pegar o valor literal do ponto, deve-se escrever "\."
"()" --> meta caracter de grupo
	Para pegar o valor literal, deve-se escrever "(" ou ")"


Quantifiers 
"{x}"  --> número de repetições de um elemento precedente na expressão regular (exatamente x vezes)
	{n,} --> no mínimo n vezes
	{n, m} --> no mínimo n+1 vezes, no máximo m vezes

" * "  --> significa zero, uma ou mais vezes

" ? "  --> significa que o caractere precedente pode ter ou não pode ter na string (caracter não obrigatório).
	Um substituto para "?" pode ser "{0,1}"

" + "  --> representa "um ou mais vezes"
	Um substituto para "+" pode ser "{1,}" (no mínimo 1 vez)
	Quantifier ganancioso. Para que esse quantifier se torne preguiçoso, deve-se inserir um caractere '?' após o '+'.


Âncoras
"\b" --> word boundary
"\B" --> non-word boundary
"^"  --> âncora para o início do texto (NADA DEVE VIR ANTES)
"$"  --> final do texto? (NADA DEVE VIR DEPOIS)

Grupos
"()" --> separa um pedaço do regex em grupos
"?:" --> Non-capturing group: coloca-se dentro do parentese, no início do grupo. Este grupo não torna-se parte do resultado final (não será capturado pela regex engine)


Javascript
Python
C#
Java